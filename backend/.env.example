# LinkedIn Job Assistant Backend Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Development/Production Mode
# Set to True for development, False for production
DEBUG=False

# Server Port (default: 5000)
PORT=5000

# Application Secret Key (generate a random string for production)
# You can generate one using: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your_secret_key_here

# =============================================================================
# AI PROVIDER CONFIGURATION (Optional - choose one or multiple)
# =============================================================================

# OpenAI Configuration
# Get your API key from: https://platform.openai.com/api-keys
# Models: gpt-3.5-turbo, gpt-4, gpt-4-turbo
OPENAI_API_KEY=
OPENAI_MODEL=gpt-3.5-turbo

# Groq Configuration (Alternative/Fallback AI provider)
# Get your API key from: https://console.groq.com/keys
# Models: mixtral-8x7b-32768, llama2-70b-4096
GROQ_API_KEY=
GROQ_MODEL=mixtral-8x7b-32768

# Claude Configuration (Future support)
# ANTHROPIC_API_KEY=
# ANTHROPIC_MODEL=claude-3-sonnet-20240229

# =============================================================================
# EMAIL CONFIGURATION (Required for automatic email sending)
# =============================================================================

# Your email credentials
EMAIL_ADDRESS=your_email@example.com
EMAIL_PASSWORD=your_app_password_here

# SMTP Server Configuration
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587

# Email Provider Examples:
# Gmail:    smtp.gmail.com:587 (requires App Password)
# Outlook:  smtp-mail.outlook.com:587
# Yahoo:    smtp.mail.yahoo.com:587
# Custom:   your_smtp_server:port

# Gmail Setup Instructions:
# 1. Enable 2-factor authentication on your Google account
# 2. Go to Google Account Settings > Security > App passwords
# 3. Generate an App Password for "Mail"
# 4. Use the generated password (not your regular password)

# =============================================================================
# STORAGE & DATABASE
# =============================================================================

# File Upload Configuration
MAX_FILE_SIZE=16777216  # 16MB in bytes
UPLOAD_FOLDER=uploads

# Database Configuration (Future enhancement)
# DATABASE_URL=sqlite:///job_assistant.db
# DATABASE_URL=postgresql://user:password@localhost/job_assistant
# DATABASE_URL=mysql://user:password@localhost/job_assistant

# =============================================================================
# SECURITY & ENCRYPTION
# =============================================================================

# Cryptographic Master Key (Auto-generated - DO NOT SET MANUALLY)
# This will be automatically generated when the application first runs
# Leave this commented out - the system will create it automatically
# CRYPTO_MASTER_KEY=auto_generated_key_will_appear_here

# Rate Limiting (requests per minute)
RATE_LIMIT_PER_MINUTE=60

# =============================================================================
# LOGGING & MONITORING
# =============================================================================

# Log Level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log File Path (logs directory will be created automatically)
LOG_FILE=logs/app.log

# Log file rotation settings
LOG_MAX_BYTES=10240
LOG_BACKUP_COUNT=10

# Enable/Disable request logging
LOG_REQUESTS=False

# =============================================================================
# EXTERNAL SERVICES (Optional)
# =============================================================================

# LinkedIn API (Future integration)
# LINKEDIN_CLIENT_ID=
# LINKEDIN_CLIENT_SECRET=

# Resume Parser API (Future integration)
# RESUME_PARSER_API_KEY=

# Company Research API (Future integration)
# COMPANY_RESEARCH_API_KEY=

# =============================================================================
# DEVELOPMENT SETTINGS (Development Only)
# =============================================================================

# Flask Development Server Settings
FLASK_ENV=development
FLASK_DEBUG=False  # Use DEBUG variable instead

# CORS Settings (for development with frontend)
CORS_ORIGINS=http://localhost:3000,chrome-extension://

# API Documentation
ENABLE_SWAGGER=True

# Mock/Test Mode (skip actual email sending in development)
MOCK_EMAIL_SENDING=False
